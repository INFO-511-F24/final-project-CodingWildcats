---
title: "Stroke Prediction Based on Demographics and Medical History"
subtitle: "INFO 511 - Fall 2024 - Final Project"
author: "Danielle Stea, Erika Kirkpatrick, Kai Shuen Neo, Sahand Motamenim, Rohit Kalakala"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
jupyter: python3
---

```{python}
#| label: load-packages
#| include: false

# Load packages here
import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split, cross_val_score, KFold
from sklearn.metrics import r2_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import SVC
from sklearn.neural_network import MLPClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder
```

```{python}
#| label: setup
#| include: false
#| 
# Set up plot theme and figure resolution
sns.set_theme(style="whitegrid")
sns.set_context("notebook", font_scale=1.1)

import matplotlib.pyplot as plt
plt.rcParams['figure.dpi'] = 300
plt.rcParams['savefig.dpi'] = 300
plt.rcParams['figure.figsize'] = (6, 6 * 0.618)
```

```{python}
#| label: load-data
#| include: false
# Load data in Python
stroke = pd.read_csv("data/healthcare-dataset-stroke-data.csv")
```

# Stroke Prediction with Machine Learning

## Introduction

-   Strokes can be a deadly medical condition, and even if the patient survives there can be life long consequences as a result of the stroke.

-   This is why we wanted to look into a dataset that may allow us to help predict the risk factors that cause a stroke. 

## Data

-   The data set used is from a study published in China in 2020. It represents a case group of individuals who had a stroke, and a control group of those who did not.

-   The dataset has observations including age, gender, marital status, and employment status, as well as medical information such as BMI, glucose levels, smoking history, etc.
```{python}
#| label: preview_data
#| include: true
#| echo: false
print(stroke.head())
```

# Methods and Results
## EDA
::::: columns
::: {.column width="50%"}
-   Missing values were dropped from the dataset and categorical variables (gender, marital status, work type, residence type and smoking status) were transformed into factors. 
:::
::: {.column width="50%"}
```{python}
#| label: eda
#| include: true
stroke = stroke.dropna()
stroke['gender'] = LabelEncoder().fit_transform(stroke['gender'])
stroke['ever_married'] = LabelEncoder().fit_transform(stroke['ever_married'])
stroke['work_type'] = LabelEncoder().fit_transform(stroke['work_type'])
stroke['Residence_type'] = LabelEncoder().fit_transform(stroke['Residence_type'])
stroke['smoking_status'] = LabelEncoder().fit_transform(stroke['smoking_status'])
stroke.drop(columns=['id'],axis=1,inplace=True) 
corr = stroke.corr()
plt.figure(figsize=(1, 0.8))
sns.heatmap(corr, annot=True)
plt.title('Variable Correlation Heatmap')
plt.show()
```
:::
:::::
## Machine Learning
- For this analysis we created several models, and compared them against each other to see which one performs the best. 

## Results

::::: columns
::: {.column width="50%"}
-   Some text

-   goes here
:::

::: {.column width="50%"}

:::
:::::

# Conclusions

## Conclusion and Future Work

If you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,


## References

![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align="center" width="500"}

## Math Expressions {.smaller}

You can write LaTeX math expressions inside a pair of dollar signs, e.g.Â \$\\alpha+\\beta\$ renders $\alpha + \beta$. You can use the display style with double dollar signs:

```         
$$\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i$$
```


Limitations:

1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;

2.  There should not be spaces after the opening `$` or before the closing `$`.

# Wrap up

## Feeling adventurous?

-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.

-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.